<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>im.dalang.alfred.ProxyToggle</string>
	<key>connections</key>
	<dict>
		<key>D43853CA-9E90-4F0C-B252-84B37476DD61</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A6CE8078-53E3-4737-89E8-7E5378E6379B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>FAC35912-48AF-4884-9314-BB799FB560C5</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D43853CA-9E90-4F0C-B252-84B37476DD61</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>dalang</string>
	<key>description</key>
	<string>turn on/off Wi-Fi http/https Proxy</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Proxy Toggle</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>Wi-Fi Proxy Toggle</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>A6CE8078-53E3-4737-89E8-7E5378E6379B</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>proxy</string>
				<key>script</key>
				<string>DEVICE=$(networksetup -listallhardwareports | grep -A 2 -E "AirPort|Wi-Fi" | grep -m 1 -o -e en[0-9]);

DEVICENAME=$(networksetup -listallhardwareports | grep -Eo "AirPort|Wi-Fi");

echo "&lt;?xml version=\"1.0\"?&gt;"
echo "&lt;items&gt;"

if [[ $(networksetup -getairportpower $DEVICE | grep -c On) == 0 ]]
then
    // Wi-Fi is off
    echo "&lt;item uid=\"hint\" arg=\"nil\"&gt;&lt;title&gt;$DEVICENAME is Off, proxy setting won't work&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;icon.png&lt;/icon&gt;&lt;/item&gt;"

else

    // Wi-Fi is on
    WebProxy=$(networksetup -getwebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
    Server=$(networksetup -getwebproxy $DEVICENAME | egrep "^Server: " | egrep -o "([0-9]{1,3}\.){3}[0-9]{1,3}")
    Port=$(networksetup -getwebproxy $DEVICENAME | egrep "^Port: " | egrep -o "\d{4}")
    echo "&lt;item uid=\"\" arg=\"$WebProxy\"&gt;&lt;title&gt;$Server:$Port&lt;/title&gt;&lt;subtitle&gt;Web Proxy Enabled: $WebProxy&lt;/subtitle&gt;&lt;icon&gt;icon.png&lt;/icon&gt;&lt;/item&gt;"

    SecureWebProxy=$(networksetup -getsecurewebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
    Server=$(networksetup -getsecurewebproxy Wi-Fi | egrep "^Server: " | egrep -o "([0-9]{1,3}\.){3}[0-9]{1,3}")
    Port=$(networksetup -getsecurewebproxy Wi-Fi | egrep "^Port: " | egrep -o "\d{4}")
    echo "&lt;item uid=\"\" arg=\"$SecureWebProxy\"&gt;&lt;title&gt;$Server:$Port&lt;/title&gt;&lt;subtitle&gt;Secure Web Proxy Enabled: $SecureWebProxy&lt;/subtitle&gt;&lt;icon&gt;icon.png&lt;/icon&gt;&lt;/item&gt;"

    if [ $WebProxy = "Yes" ] &amp;&amp; [ $SecureWebProxy = "Yes" ]; then
        // Turn Wi-Fi Proxy Off
        echo "&lt;item uid=\"\" arg=\"off\"&gt;&lt;title&gt;Turn $DEVICENAME Proxy Off&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;icon.png&lt;/icon&gt;&lt;/item&gt;"
    else
        // Turn Wi-Fi Proxy On
        echo "&lt;item uid=\"\" arg=\"on\"&gt;&lt;title&gt;Turn $DEVICENAME Proxy On&lt;/title&gt;&lt;subtitle&gt;&lt;/subtitle&gt;&lt;icon&gt;icon.png&lt;/icon&gt;&lt;/item&gt;"
    fi

fi

echo "&lt;/items&gt;"
</string>
				<key>subtext</key>
				<string>Turn Wi-Fi Proxy on/off</string>
				<key>title</key>
				<string>Proxy Toggle</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>FAC35912-48AF-4884-9314-BB799FB560C5</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>127</integer>
				<key>script</key>
				<string>DEVICENAME=$(networksetup -listallhardwareports | grep -Eo "AirPort|Wi-Fi");
USER=$(Authenticate.app/Contents/MacOS/Authenticate -get username)
PASS=$(Authenticate.app/Contents/MacOS/Authenticate -get password)

if [ $USER = '' ] &amp;&amp; [ $PASS = '' ]; then
    Authenticate.app/Contents/MacOS/Authenticate
else
    if [ {query} = "on" ]; then
        echo $PASS | sudo -S networksetup -setwebproxystate $DEVICENAME on
        echo $PASS | sudo -S networksetup -setsecurewebproxystate $DEVICENAME on

        WebProxy=$(networksetup -getwebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
        if [ $WebProxy = "Yes" ]; then
            Server=$(networksetup -getwebproxy $DEVICENAME | egrep "^Server: " | egrep -o "([0-9]{1,3}\.){3}[0-9]{1,3}")
            Port=$(networksetup -getwebproxy $DEVICENAME | egrep "^Port: " | egrep -o "\d{4}")
            echo "WebProxy On: $Server:$Port"
        else
            echo "Turn on WebProxy failed!"
        fi
        SecureWebProxy=$(networksetup -getsecurewebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
        if [ $SecureWebProxy = "Yes" ]; then
            Server=$(networksetup -getsecurewebproxy $DEVICENAME | egrep "^Server: " | egrep -o "([0-9]{1,3}\.){3}[0-9]{1,3}")
            Port=$(networksetup -getsecurewebproxy $DEVICENAME | egrep "^Port: " | egrep -o "\d{4}")
            echo "SecureWebProxy On: $Server:$Port"
        else
            echo "Turn on SecureWebProxy failed!"
        fi


    elif [ {query} = "off" ]; then
        echo $PASS | sudo -S networksetup -setwebproxystate $DEVICENAME off
        echo $PASS | sudo -S networksetup -setsecurewebproxystate $DEVICENAME off

        WebProxy=$(networksetup -getwebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
        SecureWebProxy=$(networksetup -getsecurewebproxy $DEVICENAME | egrep "^Enabled: " | egrep -o "Yes|No")
        if [ $WebProxy = "No" ] &amp;&amp; [ $SecureWebProxy = "No" ]; then
            echo "WebProxy and SecureWebProxy Off"
        else
            if [ ! $WebProxy = "No" ]; then
                echo "Turn WebProxy Off failed!"
            fi
            if [ ! $SecureWebProxy = "No" ]; then
                echo "Turn SecureWebProxy Off failed!"
            fi
        fi
    else
        echo {query} | pbcopy
    fi
fi
</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D43853CA-9E90-4F0C-B252-84B37476DD61</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>A6CE8078-53E3-4737-89E8-7E5378E6379B</key>
		<dict>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>D43853CA-9E90-4F0C-B252-84B37476DD61</key>
		<dict>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>FAC35912-48AF-4884-9314-BB799FB560C5</key>
		<dict>
			<key>ypos</key>
			<real>20</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>dalang.im</string>
</dict>
</plist>
